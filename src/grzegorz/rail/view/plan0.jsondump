{"planPath": "/tmp/solver_planning_domains_tmp_4IXl5eKz8auo5/plan", "parse_status": "ok", "logPath": "/tmp/solver_planning_domains_tmp_4IXl5eKz8auo5/log", "length": 5, "plan": [{"action": "  (:action drive\n    :parameters (train1 tc0 tc1 tc0 b0 b0 s0 clear)\n    :precondition\n      (and\n        (train train1)\n        (not\n          (crash train1)\n        )\n        (tc tc0)\n        (tc tc1)\n        (at train1 tc0)\n        (trackblock tc0 b0)\n        (trackblock tc1 b0)\n        (inblock train1 b0)\n        (fullblock b0)\n        (or\n          (and\n            (not\n              (= b0 b0)\n            )\n            (not\n              (fullblock b0)\n            )\n          )\n          (= b0 b0)\n        )\n        (forall (?x - sigitem)\n          (and\n            (not\n              (signal ?x tc0 tc1 b0 danger)\n            )\n          )\n        )\n        (last train1 tc0)\n        (not\n          (last train1 tc1)\n        )\n        (or\n          (track tc0 tc1)\n          (track tc1 tc0)\n        )\n        (not\n          (disconnected tc0 tc1)\n        )\n        (not\n          (disconnected tc1 tc0)\n        )\n      )\n    :effect\n      (and\n        (at train1 tc1)\n        (not\n          (at train1 tc0)\n        )\n        (not\n          (inblock train1 b0)\n        )\n        (inblock train1 b0)\n        (not\n          (fullblock b0)\n        )\n        (fullblock b0)\n        (last train1 tc0)\n        (not\n          (last train1 tc0)\n        )\n        (forall (?z - veh ?x - loc)\n          (when\n            (and\n              (not\n                (= train1 ?z)\n              )\n              (at ?z ?x)\n              (or\n                (= tc0 ?x)\n              )\n            )\n            (and\n              (crash train1)\n              (crash ?z)\n            )\n          )\n        )\n      )\n  )", "name": "(drive train1 tc0 tc1 tc0 b0 b0 s0 clear)"}, {"action": "  (:action set-switch\n    :parameters (tc2 tc3 tc4 tc3)\n    :precondition\n      (and\n        (tc tc2)\n        (tc tc3)\n        (tc tc4)\n        (tc tc3)\n        (switch tc2 tc3 tc4 tc3)\n        (or\n          (disconnected tc2 tc3)\n          (disconnected tc2 tc4)\n        )\n        (or\n          (track tc2 tc3)\n          (track tc3 tc2)\n        )\n        (forall (?tr - veh)\n          (and\n            (not\n              (at ?tr tc2)\n            )\n          )\n        )\n      )\n    :effect\n      (and\n        (when\n          (= tc3 tc3)\n          (and\n            (switch tc2 tc3 tc4 tc4)\n            (not\n              (switch tc2 tc3 tc4 tc3)\n            )\n            (disconnected tc2 tc3)\n            (not\n              (disconnected tc2 tc4)\n            )\n            (track tc2 tc4)\n            (not\n              (track tc2 tc3)\n            )\n            (not\n              (track tc3 tc2)\n            )\n          )\n        )\n        (when\n          (= tc4 tc3)\n          (and\n            (switch tc2 tc3 tc4 tc3)\n            (not\n              (switch tc2 tc3 tc4 tc3)\n            )\n            (disconnected tc2 tc3)\n            (not\n              (disconnected tc2 tc3)\n            )\n            (track tc2 tc3)\n            (not\n              (track tc2 tc4)\n            )\n            (not\n              (track tc4 tc2)\n            )\n          )\n        )\n      )\n  )", "name": "(set-switch tc2 tc3 tc4 tc3)"}, {"action": "  (:action set-signal\n    :parameters (tc1 tc2 b1 s0 danger)\n    :precondition\n      (and\n        (signal s0 tc1 tc2 b1 danger)\n        (not\n          (fullblock b1)\n        )\n        (or\n          (and\n            (= danger danger)\n            (safeblock b1)\n          )\n          (and\n            (= danger clear)\n            (not\n              (safeblock b1)\n            )\n          )\n        )\n      )\n    :effect\n      (and\n        (when\n          (and\n            (= danger danger)\n            (safeblock b1)\n          )\n          (and\n            (not\n              (signal s0 tc1 tc2 b1 danger)\n            )\n            (signal s0 tc1 tc2 b1 clear)\n            (not\n              (safeblock b1)\n            )\n          )\n        )\n        (when\n          (= danger clear)\n          (and\n            (not\n              (signal s0 tc1 tc2 b1 clear)\n            )\n            (signal s0 tc1 tc2 b1 danger)\n            (safeblock b1)\n          )\n        )\n      )\n  )", "name": "(set-signal tc1 tc2 b1 s0 danger)"}, {"action": "  (:action drive\n    :parameters (train1 tc1 tc2 tc0 b0 b1 s0 clear)\n    :precondition\n      (and\n        (train train1)\n        (not\n          (crash train1)\n        )\n        (tc tc1)\n        (tc tc2)\n        (at train1 tc1)\n        (trackblock tc1 b0)\n        (trackblock tc2 b1)\n        (inblock train1 b0)\n        (fullblock b0)\n        (or\n          (and\n            (not\n              (= b0 b1)\n            )\n            (not\n              (fullblock b1)\n            )\n          )\n          (= b0 b1)\n        )\n        (forall (?x - sigitem)\n          (and\n            (not\n              (signal ?x tc1 tc2 b1 danger)\n            )\n          )\n        )\n        (last train1 tc0)\n        (not\n          (last train1 tc2)\n        )\n        (or\n          (track tc1 tc2)\n          (track tc2 tc1)\n        )\n        (not\n          (disconnected tc1 tc2)\n        )\n        (not\n          (disconnected tc2 tc1)\n        )\n      )\n    :effect\n      (and\n        (at train1 tc2)\n        (not\n          (at train1 tc1)\n        )\n        (not\n          (inblock train1 b0)\n        )\n        (inblock train1 b1)\n        (not\n          (fullblock b0)\n        )\n        (fullblock b1)\n        (last train1 tc1)\n        (not\n          (last train1 tc0)\n        )\n        (forall (?z - veh ?x - loc)\n          (when\n            (and\n              (not\n                (= train1 ?z)\n              )\n              (at ?z ?x)\n              (or\n                (= tc1 ?x)\n              )\n            )\n            (and\n              (crash train1)\n              (crash ?z)\n            )\n          )\n        )\n      )\n  )", "name": "(drive train1 tc1 tc2 tc0 b0 b1 s0 clear)"}, {"action": "  (:action drive\n    :parameters (train1 tc2 tc4 tc1 b1 b1 s0 clear)\n    :precondition\n      (and\n        (train train1)\n        (not\n          (crash train1)\n        )\n        (tc tc2)\n        (tc tc4)\n        (at train1 tc2)\n        (trackblock tc2 b1)\n        (trackblock tc4 b1)\n        (inblock train1 b1)\n        (fullblock b1)\n        (or\n          (and\n            (not\n              (= b1 b1)\n            )\n            (not\n              (fullblock b1)\n            )\n          )\n          (= b1 b1)\n        )\n        (forall (?x - sigitem)\n          (and\n            (not\n              (signal ?x tc2 tc4 b1 danger)\n            )\n          )\n        )\n        (last train1 tc1)\n        (not\n          (last train1 tc4)\n        )\n        (or\n          (track tc2 tc4)\n          (track tc4 tc2)\n        )\n        (not\n          (disconnected tc2 tc4)\n        )\n        (not\n          (disconnected tc4 tc2)\n        )\n      )\n    :effect\n      (and\n        (at train1 tc4)\n        (not\n          (at train1 tc2)\n        )\n        (not\n          (inblock train1 b1)\n        )\n        (inblock train1 b1)\n        (not\n          (fullblock b1)\n        )\n        (fullblock b1)\n        (last train1 tc2)\n        (not\n          (last train1 tc1)\n        )\n        (forall (?z - veh ?x - loc)\n          (when\n            (and\n              (not\n                (= train1 ?z)\n              )\n              (at ?z ?x)\n              (or\n                (= tc2 ?x)\n              )\n            )\n            (and\n              (crash train1)\n              (crash ?z)\n            )\n          )\n        )\n      )\n  )", "name": "(drive train1 tc2 tc4 tc1 b1 b1 s0 clear)"}], "output": "\n\ntask contains conditional effects. turning off state domination.\n\n --- OK.\n Match tree built with 46 nodes.\n\nPDDL problem description loaded: \n\tDomain: DOMAIN1\n\tProblem: PROBLEM1\n\t#Actions: 46\n\t#Fluents: 40\nLandmarks found: 1\nStarting search with IW (time budget is 60 secs)...\nrel_plan size: 5\n#RP_fluents 20\nCaption\n{#goals, #UNnachieved,  #Achieved} -> IW(max_w)\n\n{1/1/0}:IW(1) -> [2][3][4][5][6]rel_plan size: 0\n#RP_fluents 0Plan found with cost: 5\nTotal time: -3.03984e-09\nNodes generated during search: 26\nNodes expanded during search: 20\nIW search completed\n", "type": "full"}